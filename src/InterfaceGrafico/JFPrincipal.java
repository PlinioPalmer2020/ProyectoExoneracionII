/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfaceGrafico;

import Entidades.Cliente;
import Entidades.DatoCompraCliente;
import Entidades.Producto;
import Entidades.TipoCompra;
import Entidades.Vendedor;
import Repositorios.CClienteRepositorio;
import Repositorios.CDatoCompraClienteRepositorio;
import Repositorios.CProductosRepositorio;
import Repositorios.CVendedorRepositorio;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author plini
 */
public class JFPrincipal extends javax.swing.JFrame {

    private CClienteRepositorio _cClienteRepositorio;
    private CVendedorRepositorio _cVendedorRepositorio;
    private CDatoCompraClienteRepositorio _cDatoCompraClienteRepositorio;
    private CProductosRepositorio _cProductosRepositorio;

    public JFPrincipal() {
        initComponents();
        _cClienteRepositorio = new CClienteRepositorio();
        _cVendedorRepositorio = new CVendedorRepositorio();
        _cDatoCompraClienteRepositorio = new CDatoCompraClienteRepositorio();
        _cProductosRepositorio = new CProductosRepositorio();

        CargarCB();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cbVendedor = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        cbTipoCompra = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        lbCliente = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtBuscarCliente = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnImprimir = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnBuscarCliente = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tProductos = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tCarrito = new javax.swing.JTable();
        lbTotal = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos"));

        jLabel1.setText("Vendedor: ");

        cbVendedor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel2.setText("Tipo de pago:");

        cbTipoCompra.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbTipoCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTipoCompraActionPerformed(evt);
            }
        });

        jLabel3.setText("Cantidad: ");

        txtCantidad.setText("1");

        jLabel4.setText("Cliente: ");

        jLabel6.setText("Buscar Cliente:");

        btnAgregar.setText("Agregar al carrito");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnImprimir.setText("Imprimir");
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnBuscarCliente.setText("Buscar Cliente");
        btnBuscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarClienteActionPerformed(evt);
            }
        });

        tProductos.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        tProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(tProductos);

        jLabel5.setText("Productos");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtBuscarCliente))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(btnImprimir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLimpiar)
                .addGap(27, 27, 27))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbTipoCompra, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbVendedor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 21, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnBuscarCliente))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAgregar)
                        .addGap(28, 28, 28)
                        .addComponent(btnGuardar))
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBuscarCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cbVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbTipoCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addGap(2, 2, 2)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnGuardar)
                    .addComponent(btnAgregar, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnImprimir)
                    .addComponent(btnLimpiar)))
        );

        tCarrito.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tCarrito);

        lbTotal.setText("Total: 0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbTotal)))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CargarCB() {
        cbVendedor.removeAllItems();
        cbTipoCompra.removeAllItems();

        ArrayList<Vendedor> listVendedor = _cVendedorRepositorio.Get();
        listVendedor.forEach((vendedor) -> {
            cbVendedor.addItem(vendedor.getNombre());
        });

        cbTipoCompra.addItem(TipoCompra.Contado.toString());
        cbTipoCompra.addItem(TipoCompra.Cheque.toString());
        cbTipoCompra.addItem(TipoCompra.Credito.toString());

        ArrayList<Producto> listProdutos = _cProductosRepositorio.Get();
        String[] producto = new String[2];
        DefaultTableModel modelProducto = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        modelProducto.addColumn("Nombre");
        modelProducto.addColumn("Precio");

        listProdutos.forEach((Produto) -> {
            producto[0] = Produto.getNombre();
            producto[1] = Double.toString(Produto.getPrecioUnitario());
            modelProducto.addRow(producto);
        });

        tProductos.setModel(modelProducto);

        DefaultTableModel modelCarrito = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        modelCarrito.addColumn("Vendedor");
        modelCarrito.addColumn("Producto");
        modelCarrito.addColumn("Tipo compra");
        modelCarrito.addColumn("Cantidad");
        modelCarrito.addColumn("Precio Und");
        modelCarrito.addColumn("Monto");
        tCarrito.setModel(modelCarrito);
    }

    private void Limpiar() {
        txtBuscarCliente.setText("");
        lbCliente.setText("");
        txtCantidad.setText("1");
        cbVendedor.setSelectedIndex(0);
        cbTipoCompra.setSelectedIndex(0);
        DefaultTableModel modelCarrito = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        modelCarrito.addColumn("Vendedor");
        modelCarrito.addColumn("Producto");
        modelCarrito.addColumn("Tipo compra");
        modelCarrito.addColumn("Cantidad");
        modelCarrito.addColumn("Precio Und");
        modelCarrito.addColumn("Monto");
        tCarrito.setModel(modelCarrito);
    }

    private void Guardar() {

        if ("".equals(txtBuscarCliente.getText())) {
            JOptionPane.showMessageDialog(null, "Debe buscar un Cliente para guardar");
            return;
        }

        int articulosRegistrados = tCarrito.getRowCount();
        int contador = 0;
        for (int i = 0; i < articulosRegistrados; i++) {
            String Cedula = txtBuscarCliente.getText();
            String Fecha = LocalDate.now().toString();
            String Vendedor = tCarrito.getValueAt(i, 0).toString();
            String TipoCompra = tCarrito.getValueAt(i, 2).toString();
            String Artículo = tCarrito.getValueAt(i, 1).toString();
            int Cantidad = Integer.parseInt(tCarrito.getValueAt(i, 3).toString());
            double PrecioUnitario = Double.parseDouble(tCarrito.getValueAt(i, 4).toString());
            float Monto = Float.parseFloat(tCarrito.getValueAt(i, 5).toString());

            DatoCompraCliente entidad = new DatoCompraCliente(Cedula, Fecha, Vendedor, TipoCompra, Artículo, Cantidad, PrecioUnitario, Monto);

            contador = contador + _cDatoCompraClienteRepositorio.Crear(entidad);
        }

        if (articulosRegistrados == contador) {
            JOptionPane.showMessageDialog(null, "Venta Registrada!");
            Limpiar();
        }
    }

    private void Imprimir() {
        if ("".equals(txtBuscarCliente.getText())) {
            JOptionPane.showMessageDialog(null, "Debe buscar un Cliente para Imprimir su factura");
            return;
        }
        Cliente cliente = _cClienteRepositorio.Get(txtBuscarCliente.getText());
        ArrayList<DatoCompraCliente> datosdb = _cDatoCompraClienteRepositorio.Get();

        String[] columnas = {"Fecha", "Vendedor", "Tipo Compra", "Cantidad", "Precio Und", "Monto"};
        String[][] datos = new String[datosdb.size()][6];

        double total = 0;

        for (int j = 0; j < datosdb.size(); j++) {
            datos[j][0] = datosdb.get(j).getFecha();
            datos[j][1] = datosdb.get(j).getVendedor();
            datos[j][2] = datosdb.get(j).getTipoCompra();
            datos[j][3] = String.valueOf(datosdb.get(j).getCantidad());
            datos[j][4] = String.valueOf(datosdb.get(j).getPrecioUnitario());
            datos[j][5] = String.valueOf(datosdb.get(j).getMonto());

            total = total + datosdb.get(j).getMonto();
        }

        String nombreArchivo = "C:\\Users\\plini\\OneDrive\\Escritorio\\archivoReporte\\tabla.txt";

        try (BufferedWriter writer = new BufferedWriter(new FileWriter(nombreArchivo))) {
            writer.write("Cédula : " + cliente.getCedula() + " " + cliente.getNombre());
            writer.newLine();
            writer.newLine();

            for (String columna : columnas) {
                writer.write(padRight(columna, 15));
            }
            writer.newLine();

            for (String[] fila : datos) {
                for (String celda : fila) {
                    writer.write(padRight(celda, 15));
                }
                writer.newLine();
            }

            writer.newLine();
            writer.write("Total:   " + padRight(String.valueOf(total), 15));
            writer.newLine();

            System.out.println("Archivo escrito exitosamente: " + nombreArchivo);
        } catch (IOException e) {
            System.err.println("Error al escribir el archivo: " + e.getMessage());
        }

    }

    private static String padRight(String texto, int n) {
        return String.format("%-" + n + "s", texto);
    }

    private void cbTipoCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTipoCompraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbTipoCompraActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        Integer datosRegistrados = tCarrito.getRowCount();
        Integer intColumn = tCarrito.getColumnCount();
        double montoLabel = 0;
        int fila = tProductos.getSelectedRow();

        if (fila == -1) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un producto para agregar al carrito!");
            return;
        }

        DefaultTableModel modelCarrito = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        modelCarrito.addColumn("Vendedor");
        modelCarrito.addColumn("Producto");
        modelCarrito.addColumn("Tipo compra");
        modelCarrito.addColumn("Cantidad");
        modelCarrito.addColumn("Precio Und");
        modelCarrito.addColumn("Monto");
        String[] carrito = new String[6];

        String nombreProducto;
        Double precioProducto;
        String nombreVendedor;
        String tipoCompra;
        Integer cantidad;
        Double monto;
        if (datosRegistrados == 0) {

            nombreProducto = tProductos.getValueAt(fila, 0).toString();
            precioProducto = Double.parseDouble(tProductos.getValueAt(fila, 1).toString());

            nombreVendedor = cbVendedor.getSelectedItem().toString();
            tipoCompra = cbTipoCompra.getSelectedItem().toString();
            cantidad = Integer.parseInt(txtCantidad.getText());
            monto = precioProducto * cantidad;

            carrito[0] = nombreVendedor;
            carrito[1] = nombreProducto;
            carrito[2] = tipoCompra;
            carrito[3] = cantidad.toString();
            carrito[4] = precioProducto.toString();
            carrito[5] = monto.toString();

            modelCarrito.addRow(carrito);

            tCarrito.setModel(modelCarrito);

            lbTotal.setText(monto.toString());
            return;
        }

        for (int i = 0; i < datosRegistrados; i++) {

            carrito[0] = tCarrito.getValueAt(i, 0).toString();
            carrito[1] = tCarrito.getValueAt(i, 1).toString();
            carrito[2] = tCarrito.getValueAt(i, 2).toString();
            carrito[3] = tCarrito.getValueAt(i, 3).toString();
            carrito[4] = tCarrito.getValueAt(i, 4).toString();
            carrito[5] = tCarrito.getValueAt(i, 5).toString();
            modelCarrito.addRow(carrito);
            montoLabel = montoLabel + Double.parseDouble(tCarrito.getValueAt(i, 5).toString());
        }

        fila = tProductos.getSelectedRow();
        nombreProducto = tProductos.getValueAt(fila, 0).toString();
        precioProducto = Double.parseDouble(tProductos.getValueAt(fila, 1).toString());

        nombreVendedor = cbVendedor.getSelectedItem().toString();
        tipoCompra = cbTipoCompra.getSelectedItem().toString();
        cantidad = Integer.parseInt(txtCantidad.getText());
        monto = precioProducto * cantidad;

        carrito[0] = nombreVendedor;
        carrito[1] = nombreProducto;
        carrito[2] = tipoCompra;
        carrito[3] = cantidad.toString();
        carrito[4] = precioProducto.toString();
        carrito[5] = monto.toString();

        modelCarrito.addRow(carrito);
        montoLabel = montoLabel + Double.parseDouble(monto.toString());

        lbTotal.setText(String.valueOf(montoLabel));
        tCarrito.setModel(modelCarrito);
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnBuscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarClienteActionPerformed
        if (!"".equals(txtBuscarCliente.getText())) {
            Cliente cliente = _cClienteRepositorio.Get(txtBuscarCliente.getText());
            if (cliente == null) {
                JOptionPane.showMessageDialog(null, "El Cliente no existe");
                return;
            }

            lbCliente.setText(cliente.getNombre());
        }
    }//GEN-LAST:event_btnBuscarClienteActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed

        Guardar();
        
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        Limpiar();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        Imprimir();
    }//GEN-LAST:event_btnImprimirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBuscarCliente;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JComboBox<String> cbTipoCompra;
    private javax.swing.JComboBox<String> cbVendedor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lbCliente;
    private javax.swing.JLabel lbTotal;
    private javax.swing.JTable tCarrito;
    private javax.swing.JTable tProductos;
    private javax.swing.JTextField txtBuscarCliente;
    private javax.swing.JTextField txtCantidad;
    // End of variables declaration//GEN-END:variables
}
